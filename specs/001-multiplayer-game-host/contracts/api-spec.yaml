openapi: 3.0.3
info:
  title: Two Rooms and a Boom - Role Assignment System API
  description: |
    "두개의 방, 한개의 폭탄" 역할 배분 시스템 API 명세.

    이 API는 RESTful HTTP 엔드포인트와 WebSocket 실시간 통신을 제공합니다.
    시스템은 역할 배분과 방 배정만 수행하며, 실제 게임은 오프라인에서 플레이어들이 직접 진행합니다.

    **참조 문서**:
    - [Feature Specification](../spec.md)
    - [Implementation Plan](../plan.md)
    - [Data Model](../data-model.md)

    **기술 스택**:
    - Backend: Go 1.21+ with Gin framework
    - WebSocket: Gorilla WebSocket
    - Storage: In-memory (volatile)
  version: 1.0.0
  contact:
    name: Two Rooms and a Boom Development Team

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: ws://localhost:8080
    description: WebSocket server

tags:
  - name: rooms
    description: 게임 방 관리 API
  - name: players
    description: 플레이어 관리 API
  - name: game
    description: 게임 진행 API
  - name: websocket
    description: 실시간 통신 WebSocket API

paths:
  /api/v1/rooms:
    post:
      tags:
        - rooms
      summary: 새 게임 방 생성
      description: |
        새로운 게임 방을 생성하고 고유한 6자리 방 코드를 반환합니다.

        **Business Rules (from spec.md)**:
        - FR-001: 고유 방 코드 자동 생성
        - SC-001: 방 생성 응답 시간 5초 이내
      operationId: createRoom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - maxPlayers
              properties:
                maxPlayers:
                  type: integer
                  minimum: 6
                  maximum: 30
                  description: 최대 플레이어 수 (6-30명)
                  example: 10
      responses:
        '201':
          description: 방 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '400':
          description: 잘못된 요청 (maxPlayers 범위 오류)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/rooms/{roomCode}:
    get:
      tags:
        - rooms
      summary: 게임 방 정보 조회
      description: |
        방 코드로 게임 방 정보를 조회합니다.

        **Business Rules (from spec.md)**:
        - FR-002: 방 코드로 방 조회
        - FR-006: 플레이어 목록 실시간 표시
      operationId: getRoom
      parameters:
        - $ref: '#/components/parameters/RoomCode'
      responses:
        '200':
          description: 방 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '404':
          description: 방을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/rooms/{roomCode}/players:
    post:
      tags:
        - players
      summary: 게임 방에 플레이어 입장
      description: |
        방 코드를 사용하여 게임 방에 입장합니다. 자동으로 익명 닉네임이 부여됩니다.

        **Business Rules (from spec.md)**:
        - FR-002: 방 코드로 입장
        - FR-003: 자동 익명 닉네임 부여
        - SC-002: 입장 후 3초 이내 표시
      operationId: joinRoom
      parameters:
        - $ref: '#/components/parameters/RoomCode'
      responses:
        '201':
          description: 입장 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 방을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: 방이 가득 찼거나 게임이 이미 시작됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/rooms/{roomCode}/players/{playerId}/nickname:
    patch:
      tags:
        - players
      summary: 플레이어 닉네임 변경
      description: |
        대기실에서 플레이어의 닉네임을 변경합니다.

        **Business Rules (from spec.md)**:
        - FR-004: 대기실에서 닉네임 변경 가능
        - FR-005: 닉네임 중복 시 자동으로 숫자 추가
      operationId: updateNickname
      parameters:
        - $ref: '#/components/parameters/RoomCode'
        - name: playerId
          in: path
          required: true
          schema:
            type: string
          description: 플레이어 ID (UUID)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nickname
              properties:
                nickname:
                  type: string
                  minLength: 2
                  maxLength: 20
                  description: 변경할 닉네임 (2-20자)
                  example: "홍길동"
      responses:
        '200':
          description: 닉네임 변경 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '400':
          description: 잘못된 닉네임 형식
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 방 또는 플레이어를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/rooms/{roomCode}/game/start:
    post:
      tags:
        - game
      summary: 게임 시작 (역할 배분 및 방 배정)
      description: |
        게임을 시작하고 모든 플레이어에게 역할을 배분하고 방을 배정합니다.

        **Business Rules (from spec.md)**:
        - FR-007: 최소 6명부터 게임 시작 가능
        - FR-008: 팀 균등 배분 (홀수일 경우 레드 팀 +1)
        - FR-009: 대통령 1명(블루), 폭파범 1명(레드) 배정
        - FR-010: 각 팀당 스파이 1-2명 배정
        - FR-011: 나머지는 일반 요원
        - FR-013: 빨간 방/파란 방 균등 배정
        - SC-004: 3초 이내 역할 배분 완료
      operationId: startGame
      parameters:
        - $ref: '#/components/parameters/RoomCode'
      responses:
        '200':
          description: 게임 시작 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameSession'
        '400':
          description: 최소 플레이어 수 부족 또는 방장 권한 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 방을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: 게임이 이미 시작됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/rooms/{roomCode}/game/reset:
    post:
      tags:
        - game
      summary: 대기실로 복귀
      description: |
        게임을 종료하고 모든 플레이어를 대기실로 복귀시킵니다.

        **Business Rules (from spec.md)**:
        - FR-015: 방장만 복귀 가능
      operationId: resetGame
      parameters:
        - $ref: '#/components/parameters/RoomCode'
      responses:
        '200':
          description: 대기실 복귀 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '403':
          description: 권한 없음 (방장만 가능)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 방을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /ws/{roomCode}:
    get:
      tags:
        - websocket
      summary: WebSocket 연결
      description: |
        실시간 통신을 위한 WebSocket 연결을 생성합니다.

        **WebSocket Events (Server → Client)**:
        - `PLAYER_JOINED`: 플레이어 입장 알림
        - `PLAYER_LEFT`: 플레이어 퇴장 알림
        - `PLAYER_DISCONNECTED`: 플레이어 연결 끊김 알림
        - `NICKNAME_CHANGED`: 닉네임 변경 알림
        - `OWNER_CHANGED`: 방장 변경 알림
        - `GAME_STARTED`: 게임 시작 알림
        - `ROLE_ASSIGNED`: 역할 배정 알림 (개인)
        - `GAME_RESET`: 대기실 복귀 알림

        **Performance Requirements (from spec.md)**:
        - SC-005: 실시간 이벤트 동기화 1초 이하
      operationId: connectWebSocket
      parameters:
        - $ref: '#/components/parameters/RoomCode'
      responses:
        '101':
          description: WebSocket 연결 성공 (Switching Protocols)
        '400':
          description: 잘못된 요청
        '404':
          description: 방을 찾을 수 없음

components:
  parameters:
    RoomCode:
      name: roomCode
      in: path
      required: true
      schema:
        type: string
        pattern: '^[A-Z0-9]{6}$'
      description: 6자리 방 코드 (예: ABC123)
      example: "ABC123"

  schemas:
    Player:
      type: object
      required:
        - id
        - nickname
        - isAnonymous
        - roomCode
        - isOwner
        - connectedAt
      properties:
        id:
          type: string
          format: uuid
          description: 플레이어 고유 ID
          example: "550e8400-e29b-41d4-a716-446655440000"
        nickname:
          type: string
          minLength: 2
          maxLength: 20
          description: 플레이어 닉네임
          example: "플레이어1"
        isAnonymous:
          type: boolean
          description: 익명 닉네임 여부
          example: true
        roomCode:
          type: string
          description: 속한 방 코드
          example: "ABC123"
        isOwner:
          type: boolean
          description: 방장 여부
          example: false
        role:
          $ref: '#/components/schemas/Role'
        team:
          $ref: '#/components/schemas/TeamColor'
        currentRoom:
          $ref: '#/components/schemas/RoomColor'
        connectedAt:
          type: string
          format: date-time
          description: 입장 시각
          example: "2025-10-22T10:00:00Z"

    Room:
      type: object
      required:
        - code
        - status
        - players
        - maxPlayers
        - createdAt
        - updatedAt
      properties:
        code:
          type: string
          pattern: '^[A-Z0-9]{6}$'
          description: 6자리 고유 방 코드
          example: "ABC123"
        status:
          $ref: '#/components/schemas/RoomStatus'
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
          description: 참가 플레이어 목록
        maxPlayers:
          type: integer
          minimum: 6
          maximum: 30
          description: 최대 플레이어 수
          example: 10
        gameSession:
          $ref: '#/components/schemas/GameSession'
        createdAt:
          type: string
          format: date-time
          description: 생성 시각
          example: "2025-10-22T10:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: 최종 업데이트 시각
          example: "2025-10-22T10:00:00Z"

    GameSession:
      type: object
      required:
        - roomCode
        - redTeam
        - blueTeam
        - redRoomPlayers
        - blueRoomPlayers
        - startedAt
      properties:
        roomCode:
          type: string
          description: 속한 방 코드
          example: "ABC123"
        redTeam:
          type: array
          items:
            $ref: '#/components/schemas/Player'
          description: 레드 팀 플레이어 목록
        blueTeam:
          type: array
          items:
            $ref: '#/components/schemas/Player'
          description: 블루 팀 플레이어 목록
        redRoomPlayers:
          type: array
          items:
            $ref: '#/components/schemas/Player'
          description: 빨간 방 플레이어 목록
        blueRoomPlayers:
          type: array
          items:
            $ref: '#/components/schemas/Player'
          description: 파란 방 플레이어 목록
        startedAt:
          type: string
          format: date-time
          description: 게임 시작 시각
          example: "2025-10-22T10:05:00Z"

    Role:
      type: object
      required:
        - id
        - name
        - description
        - team
        - isSpy
        - isLeader
      properties:
        id:
          type: string
          enum:
            - PRESIDENT
            - BOMBER
            - RED_SPY
            - BLUE_SPY
            - RED_OPERATIVE
            - BLUE_OPERATIVE
          description: 역할 고유 ID
          example: "PRESIDENT"
        name:
          type: string
          description: 역할 이름 (한글)
          example: "대통령"
        description:
          type: string
          description: 역할 설명
          example: "블루 팀의 리더"
        team:
          $ref: '#/components/schemas/TeamColor'
        isSpy:
          type: boolean
          description: 스파이 여부
          example: false
        isLeader:
          type: boolean
          description: 리더 여부 (대통령/폭파범)
          example: true

    RoomStatus:
      type: string
      enum:
        - WAITING
        - IN_PROGRESS
      description: |
        방 상태
        - WAITING: 대기 중
        - IN_PROGRESS: 게임 진행 중
      example: "WAITING"

    TeamColor:
      type: string
      enum:
        - RED
        - BLUE
      description: 팀 색상
      example: "BLUE"

    RoomColor:
      type: string
      enum:
        - RED_ROOM
        - BLUE_ROOM
      description: |
        방 색상
        - RED_ROOM: 빨간 방
        - BLUE_ROOM: 파란 방
      example: "RED_ROOM"

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: 에러 코드
          example: "ROOM_NOT_FOUND"
        message:
          type: string
          description: 에러 메시지 (한글)
          example: "방을 찾을 수 없습니다"
        details:
          type: object
          description: 추가 에러 상세 정보
          additionalProperties: true

  # WebSocket Message Schemas
  messages:
    PLAYER_JOINED:
      description: 플레이어가 입장했을 때 브로드캐스트
      direction: server-to-client
      payload:
        type: object
        required:
          - player
        properties:
          player:
            $ref: '#/components/schemas/Player'

    PLAYER_LEFT:
      description: 플레이어가 퇴장했을 때 브로드캐스트
      direction: server-to-client
      payload:
        type: object
        required:
          - playerId
        properties:
          playerId:
            type: string
            format: uuid

    PLAYER_DISCONNECTED:
      description: 플레이어 연결이 끊어졌을 때 브로드캐스트
      direction: server-to-client
      payload:
        type: object
        required:
          - playerId
        properties:
          playerId:
            type: string
            format: uuid

    NICKNAME_CHANGED:
      description: 닉네임이 변경되었을 때 브로드캐스트
      direction: server-to-client
      payload:
        type: object
        required:
          - playerId
          - newNickname
        properties:
          playerId:
            type: string
            format: uuid
          newNickname:
            type: string

    OWNER_CHANGED:
      description: 방장이 변경되었을 때 브로드캐스트
      direction: server-to-client
      payload:
        type: object
        required:
          - newOwner
        properties:
          newOwner:
            $ref: '#/components/schemas/Player'

    GAME_STARTED:
      description: 게임이 시작되었을 때 브로드캐스트
      direction: server-to-client
      payload:
        type: object
        required:
          - gameSession
        properties:
          gameSession:
            $ref: '#/components/schemas/GameSession'

    ROLE_ASSIGNED:
      description: 역할이 배정되었을 때 개별 플레이어에게 유니캐스트
      direction: server-to-client
      payload:
        type: object
        required:
          - role
          - team
          - currentRoom
        properties:
          role:
            $ref: '#/components/schemas/Role'
          team:
            $ref: '#/components/schemas/TeamColor'
          currentRoom:
            $ref: '#/components/schemas/RoomColor'

    GAME_RESET:
      description: 게임이 리셋되고 대기실로 복귀했을 때 브로드캐스트
      direction: server-to-client
      payload:
        type: object
        required:
          - room
        properties:
          room:
            $ref: '#/components/schemas/Room'
